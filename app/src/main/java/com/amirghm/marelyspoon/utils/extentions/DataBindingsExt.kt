package com.amirghm.marelyspoon.utils.extentions

import android.view.View
import android.widget.ImageView
import android.widget.TextView
import androidx.appcompat.app.AppCompatActivity
import androidx.core.content.ContextCompat
import androidx.databinding.BindingAdapter
import com.amirghm.marelyspoon.R
import com.amirghm.marelyspoon.utils.helper.imageloader.loadImage
import com.google.android.material.chip.ChipGroup

import com.google.android.material.chip.Chip





/**
 *
 * Usage: Some useful function to define some useful parameters in the xml which generated by
 * data-binding process
 *
 */

@BindingAdapter("srcUrl")
fun ImageView.setSrcUrl(imageUrl: String?) {
    if (imageUrl.isNullOrEmpty())
        this.setImageDrawable(null)
    else
        loadImage(imageUrl, this)
}


/**
 * DataBinding adapter extension to set text placeholder.
 * if the textview text is null or empty then set place holder text
 *
 * @param description the String to set product description.
 *
 * */
@BindingAdapter("app:placeHolder")
fun TextView.setProductDescription(description: String) {
    if (text.isNullOrEmpty()) text = description
}

/**
 * With this binding function the view pop back to previous state/page
 */
@BindingAdapter("navigateUpOnClick")
fun View.navigateUp(isEnabled: Boolean = false) {
    if (isEnabled) setOnClickListener {
        context?.let {
            (it as AppCompatActivity).onBackPressed()
        }
    }
}

/**
 * Switch visibility of the view if the condition is true
 */
@BindingAdapter("isVisible")
fun isVisible(view: View, isVisible: Boolean) {
    if(isVisible)view.visibility = View.VISIBLE else view.visibility = View.GONE
}

/**
 * Set Chips to the ChipGroup
 */
@BindingAdapter("chips")
fun setChips(chipGroup: ChipGroup, chips: List<String>?) {
    if(chips.isNullOrEmpty()){
        chipGroup.visibility = View.GONE
        return
    }

    for (chipText in chips)
    {
        val chip = Chip(chipGroup.context)
        chip.text = chipText
        chip.setChipBackgroundColorResource(R.color.colorAccent)
        chip.setTextColor(ContextCompat.getColor(chipGroup.context,android.R.color.white))

        chipGroup.addView(chip)
    }
}
